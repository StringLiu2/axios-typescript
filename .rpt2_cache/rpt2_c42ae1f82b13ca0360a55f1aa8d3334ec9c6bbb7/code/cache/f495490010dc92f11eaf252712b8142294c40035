{"map":"{\"version\":3,\"file\":\"dispatchRequest.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/core/dispatchRequest.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,GAAG,MAAM,OAAO,CAAC;AACxB,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AACrE,yEAAyE;AACzE,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AACpD,OAAO,SAAS,MAAM,aAAa,CAAC;AACpC;;;GAGG;AACH,MAAM,CAAC,OAAO,UAAU,eAAe,CAAU,MAA0B;IACvE,0BAA0B,CAAC,MAAM,CAAC,CAAC,CAAC,gBAAgB;IACpD,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY;IACnC,cAAc;IACd,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;QACxB,uBAAuB;QACvB,GAAG,CAAC,IAAI,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC;QACtC,OAAO,GAAG,CAAC;IACf,CAAC,EAAE,UAAC,GAAe;QACf,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE;YACrB,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,qBAAqB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAC3D;QACD,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;AACP,CAAC;AACD;;;GAGG;AACH,SAAS,aAAa,CAAC,MAA0B;IAC7C,MAAM,CAAC,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW;IAC9C,4FAA4F;IAC5F,MAAM,CAAC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,kBAAkB;IACjG,MAAM,CAAC,OAAO,GAAG,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,MAAO,CAAC,CAAC,CAAC,4EAA4E;AACjJ,CAAC;AACD;;;GAGG;AACH,MAAM,UAAU,YAAY,CAAC,EAA8D;QAA5D,YAAG,EAAE,kBAAM,EAAE,sCAAgB,EAAE,oBAAO;IACjE,8BAA8B;IAC9B,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,GAAI,CAAC,EAAE;QACjC,GAAG,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;KAClC;IACD,OAAO,QAAQ,CAAC,GAAI,EAAE,MAAM,EAAE,gBAAgB,CAAC,CAAC;AACpD,CAAC;AACD,MAAM;AACN,eAAe;AACf,mCAAmC;AACnC,MAAM;AACN,qEAAqE;AACrE,qCAAqC;AACrC,IAAI;AACJ,MAAM;AACN,iCAAiC;AACjC,mCAAmC;AACnC,MAAM;AACN,0EAA0E;AAC1E,4CAA4C;AAC5C,IAAI;AACJ;;;GAGG;AACH,SAAS,qBAAqB,CAAC,EAA+D;QAA7D,cAAI,EAAE,oBAAO,EAAY,+CAAiB;IACvE,OAAO,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,iBAAiB,CAAC,CAAC;AACvD,CAAC;AACD;;GAEG;AACH,SAAS,0BAA0B,CAAC,MAA0B;IAC1D,YAAY;IACZ,IAAI,MAAM,CAAC,WAAW;QAAE,MAAM,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC;AAClE,CAAC\"}","code":"import xhr from \"./xhr\";\r\nimport { buildURL, isAbsoluteURL, combineURL } from \"../helpers/url\";\r\n// import { transformRequest, transformResponse } from \"../helpers/data\";\r\nimport { flattenHeaders } from \"../helpers/headers\";\r\nimport transform from \"./transform\";\r\n/**\r\n * 请求处理并返回一个promise对象\r\n * @param config 请求参数配置\r\n */\r\nexport default function dispatchRequest(config) {\r\n    throwIfCancellationRequest(config); // 先判断使用过没Cancel\r\n    processConfig(config); // 先处理config\r\n    // 返回ajax返回的数据\r\n    return xhr(config).then(function (res) {\r\n        // 对res的data进行处理，然后返回结果\r\n        res.data = transformResponseData(res);\r\n        return res;\r\n    }, function (err) {\r\n        if (err && err.response) {\r\n            err.response.data = transformResponseData(err.response);\r\n        }\r\n        return Promise.reject(err);\r\n    });\r\n}\r\n/**\r\n * 对config进行处理\r\n * @param config 需要被处理的config\r\n */\r\nfunction processConfig(config) {\r\n    config.url = transformURL(config); // 对url进行处理\r\n    // config.headers = transFormHeaders(config); // 对headers的content-type进行处理,要先在data转换成普通对象前处理\r\n    config.data = transform(config.data, config.headers, config.transformRequest); // 对data进行处理，普通对象等\r\n    config.headers = flattenHeaders(config.headers, config.method); // 对headers的content-type进行处理,要先在data转换成普通对象前处理,最后对headers里面默认传入的defaults进行合并\r\n}\r\n/**\r\n * 对url做转换\r\n * @param config 需要被处理的config对象\r\n */\r\nexport function transformURL(_a) {\r\n    var url = _a.url, params = _a.params, paramsSerializer = _a.paramsSerializer, baseURL = _a.baseURL;\r\n    // 判断baseURL有没有 并且url不是绝对地址url\r\n    if (baseURL && !isAbsoluteURL(url)) {\r\n        url = combineURL(baseURL, url);\r\n    }\r\n    return buildURL(url, params, paramsSerializer);\r\n}\r\n// /**\r\n//  * 对data进行处理\r\n//  * @param config 需要被处理的config对象 \r\n//  */\r\n// function transformRequestData({ data }: AxiosRequestConfig): any {\r\n//     return transformRequest(data);\r\n// }\r\n// /**\r\n//  * 对headers进行处理  , 默认headers为空\r\n//  * @param config 需要被处理的config对象 \r\n//  */\r\n// function transFormHeaders({ headers = {}, data }: AxiosRequestConfig) {\r\n//     return processHeaders(headers, data);\r\n// }\r\n/**\r\n * 对响应的response进行处理\r\n * @param res 响应的response对象\r\n */\r\nfunction transformResponseData(_a) {\r\n    var data = _a.data, headers = _a.headers, transformResponse = _a.config.transformResponse;\r\n    return transform(data, headers, transformResponse);\r\n}\r\n/**\r\n * 判断是不是Cancel使用过，使用过直接抛出异常\r\n */\r\nfunction throwIfCancellationRequest(config) {\r\n    // 判断有没有使用过 \r\n    if (config.cancelToken)\r\n        config.cancelToken.throwIfRequested();\r\n}\r\n//# sourceMappingURL=dispatchRequest.js.map","dts":{"name":"/Users/liu/Desktop/StrLiu/WebMaterial/Typescript-project/axios-typescript/dist/types/core/dispatchRequest.d.ts","writeByteOrderMark":false,"text":"import { AxiosRequestConfig, AxiosPromise } from \"../types\";\r\n/**\r\n * 请求处理并返回一个promise对象\r\n * @param config 请求参数配置\r\n */\r\nexport default function dispatchRequest<T = any>(config: AxiosRequestConfig): AxiosPromise<T>;\r\n/**\r\n * 对url做转换\r\n * @param config 需要被处理的config对象\r\n */\r\nexport declare function transformURL({ url, params, paramsSerializer, baseURL }: AxiosRequestConfig): string;\r\n"}}

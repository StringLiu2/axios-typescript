{"map":"{\"version\":3,\"file\":\"axios.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/axios.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,KAAK,MAAM,cAAc,CAAC;AACjC,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,QAAQ,MAAM,YAAY,CAAC,CAAC,iBAAiB;AACpD,OAAO,WAAW,MAAM,oBAAoB,CAAC;AAC7C,OAAO,WAAW,MAAM,sBAAsB,CAAC;AAC/C,OAAO,MAAM,EAAE,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAEnD;;;GAGG;AACH,SAAS,cAAc,CAAC,MAA0B;IAC9C,IAAM,OAAO,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,uBAAuB;IAC1D,4CAA4C;IAC5C,IAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACvD,yCAAyC;IACzC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC1B,OAAO,QAAuB,CAAC;AACnC,CAAC;AACD;;GAEG;AACH,IAAM,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;AACvC,mBAAmB;AACnB,KAAK,CAAC,MAAM,GAAG,SAAS,MAAM,CAAC,MAAO;IAClC,MAAM,GAAG,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAA,8BAA8B;IACrE,OAAO,cAAc,CAAC,MAAM,CAAC,CAAC;AAClC,CAAC,CAAC;AACF,YAAY;AACZ,KAAK,CAAC,WAAW,GAAG,WAAW,CAAC;AAChC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AACtB,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAE1B,KAAK,CAAC,GAAG,GAAG,SAAS,GAAG,CAAC,QAAQ;IAC7B,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACjC,CAAC,CAAA;AACD,oBAAoB;AACpB,KAAK,CAAC,MAAM,GAAG,SAAS,MAAM,CAAC,QAAQ;IACnC,OAAO,SAAS,IAAI,CAAC,GAAG;QACpB,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACrC,CAAC,CAAA;AACL,CAAC,CAAA;AACD,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;AAEpB,eAAe,KAAK,CAAC\"}","code":"import Axios from \"./core/Axios\";\r\nimport { extend } from \"./helpers/util\";\r\nimport defaults from \"./defaults\"; // 默认传入这个defaults\r\nimport mergeConfig from \"./core/margeConfig\";\r\nimport CancelToken from \"./cancel/CancelToken\";\r\nimport Cancel, { isCancel } from \"./cancel/Cancel\";\r\n/**\r\n * 工厂函数，创建实例\r\n * @param config axios默认的配置\r\n */\r\nfunction createInstance(config) {\r\n    var context = new Axios(config); // 默认的defaults配置的config\r\n    // instance指向了request方法，为了保证this指向，绑定context\r\n    var instance = Axios.prototype.request.bind(context);\r\n    // 然后拷贝context上面的所有方法属性到instance，并且返回结果导出\r\n    extend(instance, context);\r\n    return instance;\r\n}\r\n/**\r\n * axios对象，内置各种请求方法等\r\n */\r\nvar axios = createInstance(defaults);\r\n// 扩展方法,创建新的axios实例\r\naxios.create = function create(config) {\r\n    config = mergeConfig(defaults, config); // 合并config然后传递给createInstance\r\n    return createInstance(config);\r\n};\r\n// 扩展取消请求的方法\r\naxios.CancelToken = CancelToken;\r\naxios.Cancel = Cancel;\r\naxios.isCancel = isCancel;\r\naxios.all = function all(promises) {\r\n    return Promise.all(promises);\r\n};\r\n// 一个高阶函数,把数组展开成多个参数\r\naxios.spread = function spread(callback) {\r\n    return function wrap(arr) {\r\n        return callback.apply(null, arr);\r\n    };\r\n};\r\naxios.Axios = Axios;\r\nexport default axios;\r\n//# sourceMappingURL=axios.js.map","dts":{"name":"/Users/liu/Desktop/StrLiu/WebMaterial/Typescript-project/axios-typescript/dist/types/axios.d.ts","writeByteOrderMark":false,"text":"import { AxiosStatic } from \"./types\";\r\n/**\r\n * axios对象，内置各种请求方法等\r\n */\r\ndeclare const axios: AxiosStatic;\r\nexport default axios;\r\n"}}

{"map":"{\"version\":3,\"file\":\"error.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/helpers/error.ts\"],\"names\":[],\"mappings\":\";AACA;;GAEG;AACH;IAAyB,8BAAK;IAE1B,mBAAmB;IACnB,0BAA0B;IAC1B,oBACI,OAAe,EACR,MAA0B,EAC1B,IAAoB,EACpB,OAAa,EACb,QAAwB;QALnC,YAOI,kBAAM,OAAO,CAAC,SAIjB;QATU,YAAM,GAAN,MAAM,CAAoB;QAC1B,UAAI,GAAJ,IAAI,CAAgB;QACpB,aAAO,GAAP,OAAO,CAAM;QACb,cAAQ,GAAR,QAAQ,CAAgB;QAG/B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,mCAAmC;QACnC,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC;;IACtD,CAAC;IACL,iBAAC;AAAD,CAAC,AAhBD,CAAyB,KAAK,GAgB7B;AACD;;;;;;;GAOG;AACH,MAAM,UAAU,WAAW,CACvB,OAAe,EACf,MAA0B,EAC1B,IAAoB,EACpB,OAAa,EACb,QAAwB;IAExB,OAAO,IAAI,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AACpE,CAAC\"}","code":"import { __extends } from \"tslib\";\r\n/**\r\n * 继承错误对象，实现更佳详细的对象，有config,code,request，response属性，除了config非必选\r\n */\r\nvar AxiosError = /** @class */ (function (_super) {\r\n    __extends(AxiosError, _super);\r\n    // 添加一个注释,让测试忽略构造函数\r\n    /* istanbul ignore next */\r\n    function AxiosError(message, config, code, request, response) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.config = config;\r\n        _this.code = code;\r\n        _this.request = request;\r\n        _this.response = response;\r\n        _this.isAxiosError = true;\r\n        // 解决typescript的坑，继承内置对象出现问题，所以要清除坑\r\n        Object.setPrototypeOf(_this, AxiosError.prototype);\r\n        return _this;\r\n    }\r\n    return AxiosError;\r\n}(Error));\r\n/**\r\n * 工厂模式，然后返回这个对象\r\n * @param message 错误信息\r\n * @param config 错误的那个传入request的配置对象\r\n * @param code 错误状态字符串(可选)\r\n * @param request 请求对象(可选)\r\n * @param response 响应对象(可选)\r\n */\r\nexport function createError(message, config, code, request, response) {\r\n    return new AxiosError(message, config, code, request, response);\r\n}\r\n//# sourceMappingURL=error.js.map","dts":{"name":"/Users/liu/Desktop/StrLiu/WebMaterial/Typescript-project/axios-typescript/dist/types/helpers/error.d.ts","writeByteOrderMark":false,"text":"import { AxiosRequestConfig, AxiosResponse } from \"../types\";\r\n/**\r\n * 继承错误对象，实现更佳详细的对象，有config,code,request，response属性，除了config非必选\r\n */\r\ndeclare class AxiosError extends Error {\r\n    config: AxiosRequestConfig;\r\n    code?: string | null | undefined;\r\n    request?: any;\r\n    response?: AxiosResponse<any> | undefined;\r\n    isAxiosError: boolean;\r\n    constructor(message: string, config: AxiosRequestConfig, code?: string | null | undefined, request?: any, response?: AxiosResponse<any> | undefined);\r\n}\r\n/**\r\n * 工厂模式，然后返回这个对象\r\n * @param message 错误信息\r\n * @param config 错误的那个传入request的配置对象\r\n * @param code 错误状态字符串(可选)\r\n * @param request 请求对象(可选)\r\n * @param response 响应对象(可选)\r\n */\r\nexport declare function createError(message: string, config: AxiosRequestConfig, code?: string | null, request?: any, response?: AxiosResponse): AxiosError;\r\nexport {};\r\n"}}

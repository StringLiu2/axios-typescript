{"map":"{\"version\":3,\"file\":\"defaults.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/defaults.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AACrE;;GAEG;AACH,IAAM,QAAQ,GAAuB;IACjC,MAAM,EAAE,KAAK;IACb,OAAO,EAAE,CAAC;IACV,OAAO,EAAE;QACL,kBAAkB;QAClB,MAAM,EAAE;YACJ,MAAM,EAAE,oCAAoC;SAC/C;KACJ;IACD,wCAAwC;IACxC,gBAAgB,EAAE;QACd,UAAU,IAAS,EAAE,OAAY;YAC7B,uBAAuB;YACvB,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAC9B,+CAA+C;YAC/C,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC;KACJ;IACD,iBAAiB,EAAE;QACf,4CAA4C;QAC5C,UAAU,IAAS;YACf,OAAO,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC;KACJ;IACD,MAAM;IACN,cAAc,EAAE,YAAY;IAC5B,aAAa,EAAE,cAAc;IAC7B,UAAU;IACV,cAAc,EAAd,UAAe,MAAc;QACxB,mBAAmB;QACnB,OAAO,MAAM,IAAI,GAAG,IAAI,MAAM,GAAG,GAAG,CAAC;IAC1C,CAAC;CACJ,CAAA;AACD,UAAU;AACV,IAAM,aAAa,GAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;AACrE,aAAa,CAAC,OAAO,CAAC,UAAC,MAAc;IACjC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,kBAAkB;AACrD,CAAC,CAAC,CAAC;AACH,WAAW;AACX,IAAM,eAAe,GAAa,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;AAC3D,eAAe,CAAC,OAAO,CAAC,UAAC,MAAc;IACnC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG;QACvB,mBAAmB;QACnB,cAAc,EAAE,mCAAmC;KACtD,CAAC;AACN,CAAC,CAAC,CAAC;AAEH,eAAe,QAAQ,CAAC\"}","code":"import { processHeaders } from \"./helpers/headers\";\r\nimport { transformRequest, transformResponse } from \"./helpers/data\";\r\n/**\r\n * 配置默认的一些请求参数等，比如给post请求添加什么，添加请求头等\r\n */\r\nvar defaults = {\r\n    method: 'get',\r\n    timeout: 0,\r\n    headers: {\r\n        // 默认给所有请求添加的请求头内容\r\n        common: {\r\n            Accept: 'application/json, text/plain, /*/*',\r\n        }\r\n    },\r\n    // 默认的transformRequest、transformResponse\r\n    transformRequest: [\r\n        function (data, headers) {\r\n            // 对请求的headers进行处理，设置属性\r\n            processHeaders(headers, data);\r\n            // 请求的data进行转换，对普通对象data进行转换成json字符串，然后返回新的data\r\n            return transformRequest(data);\r\n        }\r\n    ],\r\n    transformResponse: [\r\n        // 响应的data进行转换,对返回的json字符串转换成json对象，其它情况下不处理\r\n        function (data) {\r\n            return transformResponse(data);\r\n        }\r\n    ],\r\n    // 默认值\r\n    xsrfCookieName: 'XSRF-TOKEN',\r\n    xsrHeaderName: 'X-XSRF-TOKEN',\r\n    // 默认合法状态码\r\n    validateStatus: function (status) {\r\n        // 状态码等于这个得情况下，直接返回\r\n        return status >= 200 && status < 300;\r\n    }\r\n};\r\n// 当是这四种类型\r\nvar methodsNoData = ['delete', 'head', 'get', 'options'];\r\nmethodsNoData.forEach(function (method) {\r\n    defaults.headers[method] = {}; // headers添加这么多空对象\r\n});\r\n// 当是如下三种类型\r\nvar methodsWithData = ['post', 'put', 'patch'];\r\nmethodsWithData.forEach(function (method) {\r\n    defaults.headers[method] = {\r\n        // 默认带了content-type\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n    };\r\n});\r\nexport default defaults;\r\n//# sourceMappingURL=defaults.js.map","dts":{"name":"/Users/liu/Desktop/StrLiu/WebMaterial/Typescript-project/axios-typescript/dist/types/defaults.d.ts","writeByteOrderMark":false,"text":"import { AxiosRequestConfig } from \"./types\";\r\n/**\r\n * 配置默认的一些请求参数等，比如给post请求添加什么，添加请求头等\r\n */\r\ndeclare const defaults: AxiosRequestConfig;\r\nexport default defaults;\r\n"}}
